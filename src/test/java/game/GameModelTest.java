package game;

import game.model.GameModel;
import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

import static org.junit.jupiter.api.Assertions.*;

public class GameModelTest {
    GameModel gameModel;

    @BeforeEach
    void setUp() {
        gameModel = new GameModel();
    }

    @Test
    void testIsEmptyField() {
        assertFalse(gameModel.isEmptyField(2, 1));
        assertTrue(gameModel.isEmptyField(0, 0));

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.isEmptyField(1, 0));
        assertTrue(gameModel.isEmptyField(1, 1));
        assertFalse(gameModel.isEmptyField(4,1));
        assertTrue(gameModel.isEmptyField(6,6));
        assertFalse(gameModel.isEmptyField(8,3));
        assertTrue(gameModel.isEmptyField(10,4));
    }

    @Test
    void testMove() {
        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        gameModel.setP1name("asd");
        gameModel.setP2name("asd2");

        gameModel.move("asd", 0, 0);
        assertArrayEquals(new int[][]{
                {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}}, gameModel.getField());
        gameModel.move("asd2", 0, 0);
        assertArrayEquals(new int[][]{
                {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}}, gameModel.getField());
        gameModel.move("asd", 1, 1);
        assertArrayEquals(new int[][]{
                {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 1, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}}, gameModel.getField());
        gameModel.move("asd2", 1, 1);
        assertArrayEquals(new int[][]{
                {1, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 1, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}}, gameModel.getField());
    }

    @Test
    void testRedWinCheck(){
        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.redWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.redWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {0, 2, 1, 2, 2, 1, 2, 2, 0, 2, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.redWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 2, 0, 1, 1, 0, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 0, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.redWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 1, 0, 0, 2, 1, 1, 2, 2, 2, 1},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.redWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 0, 1, 2, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 1, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 0, 1, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0}
        });
        assertFalse(gameModel.redWinCheck());
    }

    @Test
    void testBlueWinCheck(){
        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 1, 2, 2, 2, 2, 2, 2, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.blueWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.blueWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 1, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 1, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {0, 2, 1, 2, 2, 1, 2, 1, 0, 2, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 1, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 2, 2, 2, 2, 1, 2, 2, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.blueWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 0, 2, 0, 2, 0, 1, 1, 0, 0},
                {2, 0, 2, 0, 1, 2, 2, 1, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 0, 0},
                {0, 1, 2, 1, 2, 1, 0, 2, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 1, 1, 0, 1, 0, 2, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.blueWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 1, 0, 0, 2, 1, 1, 2, 2, 2, 1},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1}
        });
        assertTrue(gameModel.blueWinCheck());

        gameModel.setField(new int[][]{
                {0, 1, 0, 0, 1, 2, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 1, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 0, 1, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0}
        });
        assertFalse(gameModel.blueWinCheck());
    }

    @Test
    void testIsGameOver(){
        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 1, 0, 0, 2, 1, 1, 2, 2, 2, 1},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 1},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 1}
        });
        assertTrue(gameModel.isGameOver());

        gameModel.setField(new int[][]{
                {0, 1, 0, 0, 1, 2, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 1, 2, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 0, 1, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 1, 2, 0, 1, 2, 2, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 1, 0, 0, 1, 0}
        });
        assertFalse(gameModel.isGameOver());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertTrue(gameModel.isGameOver());

        gameModel.setField(new int[][]{
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 1, 2, 0, 2, 0, 2, 0, 2},
                {0, 1, 2, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 1, 2, 0, 0, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 2, 1, 2, 0, 2, 2, 1, 2, 2, 0},
                {0, 1, 2, 1, 1, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 2, 2, 0, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0},
                {2, 0, 2, 0, 2, 0, 2, 0, 2, 1, 2},
                {0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0}
        });
        assertFalse(gameModel.isGameOver());

    }

}
